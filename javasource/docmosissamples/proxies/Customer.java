// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package docmosissamples.proxies;

public class Customer
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject customerMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DocmosisSamples.Customer";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Company("Company"),
		Contact("Contact"),
		Address1("Address1"),
		Address2("Address2"),
		State("State"),
		Zipcode("Zipcode"),
		City("City");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Customer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Customer(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject customerMendixObject)
	{
		if (customerMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, customerMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.customerMendixObject = customerMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Customer.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static docmosissamples.proxies.Customer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return docmosissamples.proxies.Customer.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static docmosissamples.proxies.Customer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new docmosissamples.proxies.Customer(context, mendixObject);
	}

	public static docmosissamples.proxies.Customer load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return docmosissamples.proxies.Customer.initialize(context, mendixObject);
	}

	public static java.util.List<docmosissamples.proxies.Customer> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> docmosissamples.proxies.Customer.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Company
	 */
	public final java.lang.String getCompany()
	{
		return getCompany(getContext());
	}

	/**
	 * @param context
	 * @return value of Company
	 */
	public final java.lang.String getCompany(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Company.toString());
	}

	/**
	 * Set value of Company
	 * @param company
	 */
	public final void setCompany(java.lang.String company)
	{
		setCompany(getContext(), company);
	}

	/**
	 * Set value of Company
	 * @param context
	 * @param company
	 */
	public final void setCompany(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String company)
	{
		getMendixObject().setValue(context, MemberNames.Company.toString(), company);
	}

	/**
	 * @return value of Contact
	 */
	public final java.lang.String getContact()
	{
		return getContact(getContext());
	}

	/**
	 * @param context
	 * @return value of Contact
	 */
	public final java.lang.String getContact(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Contact.toString());
	}

	/**
	 * Set value of Contact
	 * @param contact
	 */
	public final void setContact(java.lang.String contact)
	{
		setContact(getContext(), contact);
	}

	/**
	 * Set value of Contact
	 * @param context
	 * @param contact
	 */
	public final void setContact(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String contact)
	{
		getMendixObject().setValue(context, MemberNames.Contact.toString(), contact);
	}

	/**
	 * @return value of Address1
	 */
	public final java.lang.String getAddress1()
	{
		return getAddress1(getContext());
	}

	/**
	 * @param context
	 * @return value of Address1
	 */
	public final java.lang.String getAddress1(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Address1.toString());
	}

	/**
	 * Set value of Address1
	 * @param address1
	 */
	public final void setAddress1(java.lang.String address1)
	{
		setAddress1(getContext(), address1);
	}

	/**
	 * Set value of Address1
	 * @param context
	 * @param address1
	 */
	public final void setAddress1(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String address1)
	{
		getMendixObject().setValue(context, MemberNames.Address1.toString(), address1);
	}

	/**
	 * @return value of Address2
	 */
	public final java.lang.String getAddress2()
	{
		return getAddress2(getContext());
	}

	/**
	 * @param context
	 * @return value of Address2
	 */
	public final java.lang.String getAddress2(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Address2.toString());
	}

	/**
	 * Set value of Address2
	 * @param address2
	 */
	public final void setAddress2(java.lang.String address2)
	{
		setAddress2(getContext(), address2);
	}

	/**
	 * Set value of Address2
	 * @param context
	 * @param address2
	 */
	public final void setAddress2(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String address2)
	{
		getMendixObject().setValue(context, MemberNames.Address2.toString(), address2);
	}

	/**
	 * @return value of State
	 */
	public final java.lang.String getState()
	{
		return getState(getContext());
	}

	/**
	 * @param context
	 * @return value of State
	 */
	public final java.lang.String getState(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.State.toString());
	}

	/**
	 * Set value of State
	 * @param state
	 */
	public final void setState(java.lang.String state)
	{
		setState(getContext(), state);
	}

	/**
	 * Set value of State
	 * @param context
	 * @param state
	 */
	public final void setState(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String state)
	{
		getMendixObject().setValue(context, MemberNames.State.toString(), state);
	}

	/**
	 * @return value of Zipcode
	 */
	public final java.lang.String getZipcode()
	{
		return getZipcode(getContext());
	}

	/**
	 * @param context
	 * @return value of Zipcode
	 */
	public final java.lang.String getZipcode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Zipcode.toString());
	}

	/**
	 * Set value of Zipcode
	 * @param zipcode
	 */
	public final void setZipcode(java.lang.String zipcode)
	{
		setZipcode(getContext(), zipcode);
	}

	/**
	 * Set value of Zipcode
	 * @param context
	 * @param zipcode
	 */
	public final void setZipcode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String zipcode)
	{
		getMendixObject().setValue(context, MemberNames.Zipcode.toString(), zipcode);
	}

	/**
	 * @return value of City
	 */
	public final java.lang.String getCity()
	{
		return getCity(getContext());
	}

	/**
	 * @param context
	 * @return value of City
	 */
	public final java.lang.String getCity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.City.toString());
	}

	/**
	 * Set value of City
	 * @param city
	 */
	public final void setCity(java.lang.String city)
	{
		setCity(getContext(), city);
	}

	/**
	 * Set value of City
	 * @param context
	 * @param city
	 */
	public final void setCity(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String city)
	{
		getMendixObject().setValue(context, MemberNames.City.toString(), city);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return customerMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final docmosissamples.proxies.Customer that = (docmosissamples.proxies.Customer) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package docmosiscloudunittesting.proxies;

public class EmployeeRenderData
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject employeeRenderDataMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DocmosisCloudUnitTesting.EmployeeRenderData";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		EmployeeCount("EmployeeCount"),
		EmployeeRender_EmployeeRenderData("DocmosisCloudUnitTesting.EmployeeRender_EmployeeRenderData");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public EmployeeRenderData(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "DocmosisCloudUnitTesting.EmployeeRenderData"));
	}

	protected EmployeeRenderData(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject employeeRenderDataMendixObject)
	{
		if (employeeRenderDataMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("DocmosisCloudUnitTesting.EmployeeRenderData", employeeRenderDataMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a DocmosisCloudUnitTesting.EmployeeRenderData");

		this.employeeRenderDataMendixObject = employeeRenderDataMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'EmployeeRenderData.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static docmosiscloudunittesting.proxies.EmployeeRenderData initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return docmosiscloudunittesting.proxies.EmployeeRenderData.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static docmosiscloudunittesting.proxies.EmployeeRenderData initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new docmosiscloudunittesting.proxies.EmployeeRenderData(context, mendixObject);
	}

	public static docmosiscloudunittesting.proxies.EmployeeRenderData load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return docmosiscloudunittesting.proxies.EmployeeRenderData.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of EmployeeCount
	 */
	public final java.lang.Long getEmployeeCount()
	{
		return getEmployeeCount(getContext());
	}

	/**
	 * @param context
	 * @return value of EmployeeCount
	 */
	public final java.lang.Long getEmployeeCount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.EmployeeCount.toString());
	}

	/**
	 * Set value of EmployeeCount
	 * @param employeecount
	 */
	public final void setEmployeeCount(java.lang.Long employeecount)
	{
		setEmployeeCount(getContext(), employeecount);
	}

	/**
	 * Set value of EmployeeCount
	 * @param context
	 * @param employeecount
	 */
	public final void setEmployeeCount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long employeecount)
	{
		getMendixObject().setValue(context, MemberNames.EmployeeCount.toString(), employeecount);
	}

	/**
	 * @return value of EmployeeRender_EmployeeRenderData
	 */
	public final docmosiscloudunittesting.proxies.EmployeeRender getEmployeeRender_EmployeeRenderData() throws com.mendix.core.CoreException
	{
		return getEmployeeRender_EmployeeRenderData(getContext());
	}

	/**
	 * @param context
	 * @return value of EmployeeRender_EmployeeRenderData
	 */
	public final docmosiscloudunittesting.proxies.EmployeeRender getEmployeeRender_EmployeeRenderData(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		docmosiscloudunittesting.proxies.EmployeeRender result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.EmployeeRender_EmployeeRenderData.toString());
		if (identifier != null)
			result = docmosiscloudunittesting.proxies.EmployeeRender.load(context, identifier);
		return result;
	}

	/**
	 * Set value of EmployeeRender_EmployeeRenderData
	 * @param employeerender_employeerenderdata
	 */
	public final void setEmployeeRender_EmployeeRenderData(docmosiscloudunittesting.proxies.EmployeeRender employeerender_employeerenderdata)
	{
		setEmployeeRender_EmployeeRenderData(getContext(), employeerender_employeerenderdata);
	}

	/**
	 * Set value of EmployeeRender_EmployeeRenderData
	 * @param context
	 * @param employeerender_employeerenderdata
	 */
	public final void setEmployeeRender_EmployeeRenderData(com.mendix.systemwideinterfaces.core.IContext context, docmosiscloudunittesting.proxies.EmployeeRender employeerender_employeerenderdata)
	{
		if (employeerender_employeerenderdata == null)
			getMendixObject().setValue(context, MemberNames.EmployeeRender_EmployeeRenderData.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.EmployeeRender_EmployeeRenderData.toString(), employeerender_employeerenderdata.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return employeeRenderDataMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final docmosiscloudunittesting.proxies.EmployeeRenderData that = (docmosiscloudunittesting.proxies.EmployeeRenderData) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "DocmosisCloudUnitTesting.EmployeeRenderData";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
